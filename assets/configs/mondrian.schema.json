{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "layout": {
      "type": "object",
      "description": "Configuration settings for the tiling layout.",
      "properties": {
        "tiling_strategy": {
          "$ref": "#/definitions/tilingStrategyEnum"
        },
        "paddings": {
          "allOf": [
            {
              "$ref": "#/definitions/layoutPaddings"
            },
            {
              "description": "Padding settings for the windows in the layout."
            }
          ]
        },
        "half_focalized_paddings": {
          "allOf": [
            {
              "$ref": "#/definitions/layoutPaddings"
            },
            {
              "description": "Padding settings for windows in the half-focalized layout."
            }
          ]
        },
        "focalized_padding": {
          "allOf": [
            {
              "$ref": "#/definitions/bordersPadding"
            },
            {
              "description": "Padding between monitor borders and the focalized window (in pixels). Can be:\n\n- A number, which will be applied to all sides;\n- A 2-tuple ([vertical, horizontal]);\n- A 4-tuple ([top, right, bottom, left]).\n\nAll values must be between 0 and 140."
            }
          ]
        },
        "strategy": {
          "type": "object",
          "description": "Settings for single layout strategies.",
          "properties": {
            "golden_ratio": {
              "type": "object",
              "description": "Settings for the *Golden ratio* layout.",
              "properties": {
                "ratio": {
                  "type": "integer",
                  "description": "Ratio of the first split.",
                  "minimum": 10,
                  "maximum": 90
                },
                "clockwise": {
                  "type": "boolean",
                  "description": "Places the windows clockwise or counterclockwise."
                },
                "vertical": {
                  "type": "boolean",
                  "description": "If true, the layout will be vertical."
                }
              },
              "additionalProperties": false
            },
            "twostep": {
              "type": "object",
              "description": "Settings for the *Twostep* layout.",
              "properties": {
                "first_step": {
                  "type": "string",
                  "description": "First insertion direction.",
                  "enum": ["right", "left", "up", "down"]
                },
                "second_step": {
                  "type": "string",
                  "description": "Second insertion direction.",
                  "enum": ["right", "left", "up", "down"]
                },
                "ratio": {
                  "type": "integer",
                  "description": "Ratio of the first split.",
                  "minimum": 10,
                  "maximum": 90
                }
              },
              "additionalProperties": false
            },
            "horizontal": {
              "type": "object",
              "description": "Settings for the *Horizontal* layout.",
              "properties": {
                "grow_right": {
                  "type": "boolean",
                  "description": "If true, the layout will grow on the right side."
                }
              },
              "additionalProperties": false
            },
            "vertical": {
              "type": "object",
              "description": "Settings for the *Vertical* layout.",
              "properties": {
                "grow_down": {
                  "type": "boolean",
                  "description": "If true, the layout will grow on the bottom side."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "general": {
      "type": "object",
      "description": "General configuration options.",
      "properties": {
        "history_based_navigation": {
          "type": "boolean",
          "description": "If true, navigation will prioritize the most recently focused window in the given direction."
        },
        "insert_in_monitor": {
          "type": "boolean",
          "description": "If true, moving the window to a new monitor inserts it rather than swapping."
        },
        "free_move_in_monitor": {
          "type": "boolean",
          "description": "If true, free moving the window to a new monitor is enabled by default.",
          "x-taplo": {
            "links": {
              "key": "https://github.com/policastro/mondrian?tab=readme-ov-file#moving-windows"
            }
          }
        },
        "detect_maximized_windows": {
          "type": "boolean",
          "description": "Prevents maximized windows from being managed."
        },
        "move_cursor_on_focus": {
          "type": "boolean",
          "description": "Moves the mouse cursor to the center of the focused window when focus is changed."
        },
        "auto_reload_configs": {
          "type": "boolean",
          "description": "Reloads the configurations on config file changes."
        },
        "animations": {
          "type": "object",
          "description": "Settings for animations in the layout.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of animation used.",
              "enum": [
                "linear",
                "ease_in",
                "ease_in_sine",
                "ease_in_quad",
                "ease_in_cubic",
                "ease_in_quart",
                "ease_in_quint",
                "ease_in_expo",
                "ease_in_circ",
                "ease_in_back",
                "ease_in_elastic",
                "ease_in_bounce",
                "ease_out",
                "ease_out_sine",
                "ease_out_quad",
                "ease_out_cubic",
                "ease_out_quart",
                "ease_out_quint",
                "ease_out_expo",
                "ease_out_circ",
                "ease_out_back",
                "ease_out_elastic",
                "ease_out_bounce",
                "ease_in_out",
                "ease_in_out_sine",
                "ease_in_out_quad",
                "ease_in_out_cubic",
                "ease_in_out_quart",
                "ease_in_out_quint",
                "ease_in_out_expo",
                "ease_in_out_circ",
                "ease_in_out_back",
                "ease_in_out_elastic",
                "ease_in_out_bounce"
              ]
            },
            "enabled": {
              "type": "boolean",
              "description": "Enable or disable animations."
            },
            "duration": {
              "type": "integer",
              "description": "Duration of the animations in milliseconds.",
              "minimum": 100,
              "maximum": 10000
            },
            "framerate": {
              "type": "integer",
              "description": "Framerate of the animations.",
              "minimum": 10,
              "maximum": 240
            }
          },
          "additionalProperties": false
        },
        "floating_wins": {
          "allOf": [
            { "$ref": "#/definitions/floatingSettings" },
            { "description": "Settings for floating windows." }
          ]
        }
      },
      "additionalProperties": false
    },
    "modules": {
      "type": "object",
      "description": "Modules configuration settings.",
      "properties": {
        "keybindings": {
          "type": "object",
          "description": "Keybindings module settings.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enables/disables the module."
            },
            "bindings": {
              "type": "array",
              "description": "Custom keybindings. Each keybinding has the format\n`{ modifiers = \"MODIFIERS\", key = \"KEY\", action = \"ACTION\" }`.\nCheck the [docs](https://github.com/policastro/mondrian?tab=readme-ov-file#custom-keybindings-with-moduleskeybindingsbindings-) for more info.",
              "items": {
                "type": "object",
                "properties": {
                  "modifiers": {
                    "type": "string",
                    "description": "Modifiers to be pressed."
                  },
                  "modifier": {
                    "type": "string",
                    "description": "Modifiers to be pressed."
                  },
                  "mod": {
                    "type": "string",
                    "description": "Modifiers to be pressed."
                  },
                  "action": {
                    "$ref": "#/definitions/actionsEnum"
                  },
                  "key": {
                    "type": "string",
                    "description": "Key to be pressed."
                  }
                },
                "anyOf": [
                  {
                    "required": ["key", "action"]
                  },
                  {
                    "required": ["modifiers", "key", "action"]
                  },
                  {
                    "required": ["modifier", "key", "action"]
                  },
                  {
                    "required": ["mod", "key", "action"]
                  }
                ],
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false,
          "x-taplo": {
            "links": {
              "key": "https://github.com/policastro/mondrian?tab=readme-ov-file#custom-keybindings-with-moduleskeybindingsbindings-"
            }
          }
        },
        "overlays": {
          "type": "object",
          "description": "Overlays module settings.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enables/disables the module."
            },
            "update_while_dragging": {
              "type": "boolean",
              "description": "Updates the overlays while dragging the window."
            },
            "update_while_animating": {
              "type": "boolean",
              "description": "Updates the overlays while the animation is running."
            },
            "thickness": {
              "type": "integer",
              "description": "Thickness of the overlays borders (in pixels).",
              "minimum": 1,
              "maximum": 100
            },
            "padding": {
              "type": "integer",
              "description": "Padding between the overlay and the window (in pixels).",
              "minimum": 0,
              "maximum": 30
            },
            "border_radius": {
              "type": "integer",
              "description": "Border radius of the overlays in pixels.",
              "minimum": 0,
              "maximum": 100
            },
            "active": {
              "allOf": [
                {
                  "$ref": "#/definitions/specificOverlaySettings"
                },
                {
                  "description": "Active overlay settings."
                }
              ]
            },
            "inactive": {
              "allOf": [
                {
                  "$ref": "#/definitions/specificOverlaySettings"
                },
                {
                  "description": "Inactive overlay settings."
                }
              ]
            },
            "focalized": {
              "allOf": [
                {
                  "$ref": "#/definitions/specificOverlaySettings"
                },
                {
                  "description": "Focalized overlay settings."
                }
              ]
            },
            "half_focalized": {
              "allOf": [
                {
                  "$ref": "#/definitions/specificOverlaySettings"
                },
                {
                  "description": "Half-focalized overlay settings."
                }
              ]
            },
            "floating": {
              "allOf": [
                {
                  "$ref": "#/definitions/specificOverlaySettings"
                },
                {
                  "description": "Floating overlay settings."
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "core": {
      "type": "object",
      "description": "Core configuration settings.",
      "properties": {
        "ignore_rules": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/filter"
              },
              {
                "description": "Custom rules to exclude windows from being managed.\n\nEach rule has the format \n ```{ title =\"TITLE\", exename = \"EXENAME\", classname = \"CLASSNAME\", style = \"STYLE\" }``` and the rule will be applied to all windows that match all the fields specified (you must specify at least one).\n Check the [docs](https://github.com/policastro/mondrian?tab=readme-ov-file#ignore-windows-with-coreignore_rules-) for more info.",
                "x-taplo": {
                  "links": {
                    "key": "https://github.com/policastro/mondrian?tab=readme-ov-file#ignore-windows-with-coreignore_rules-"
                  }
                }
              }
            ]
          },
          "additionalProperties": false
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Rules to control the behavior of specific windows. A rule is composed by a: \n - `filter`, which is used to match windows;\n - `behavior` (or `behaviors`), which is used to control the behavior of the matched windows. \n\nEach `filter` has the format \n ```{ title =\"TITLE\", exename = \"EXENAME\", classname = \"CLASSNAME\", style = \"STYLE\" }``` and the rule will be applied to all windows that match all the fields specified (you must specify at least one).\n Check the [docs](https://github.com/policastro/mondrian?tab=readme-ov-file#custom-rules-with-corerules-) for more info.",
            "properties": {
              "filter": {
                "$ref": "#/definitions/filter"
              },
              "behavior": {
                "$ref": "#/definitions/windowBehavior"
              },
              "behaviors": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/windowBehavior"
                }
              }
            },
            "oneOf": [
              {
                "required": ["filter", "behavior"]
              },
              {
                "required": ["filter", "behaviors"]
              }
            ],
            "additionalProperties": false
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "monitors": {
      "type": "object",
      "description": "Monitors configuration settings.",
      "patternProperties": {
        "^[^\"'`\n]+$": {
          "type": "object",
          "description": "Monitor configuration settings.",
          "properties": {
            "layout": {
              "type": "object",
              "description": "Configuration settings for the tiling layout.",
              "properties": {
                "tiling_strategy": {
                  "$ref": "#/definitions/tilingStrategyEnum"
                },
                "paddings": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/layoutPaddings"
                    },
                    {
                      "description": "Padding settings for the windows in the layout."
                    }
                  ]
                },
                "half_focalized_paddings": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/layoutPaddings"
                    },
                    {
                      "description": "Padding settings for windows in the half-focalized layout."
                    }
                  ]
                },
                "focalized_padding": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/bordersPadding"
                    },
                    {
                      "description": "Padding between monitor borders and the focalized window (in pixels). Can be:\n\n- A number, which will be applied to all sides;\n- A 2-tuple ([vertical, horizontal]);\n- A 4-tuple ([top, right, bottom, left]).\n\nAll values must be between 0 and 140."
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "additionalProperties": false
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "definitions": {
    "filter": {
      "type": "object",
      "properties": {
        "exename": {
          "type": "string",
          "description": "Executable name of the window to match. If enclosed in slashes (e.g. \"/Value[0-9]/\"), it will be treated as a regex."
        },
        "classname": {
          "type": "string",
          "description": "Class name of the window to to match. If enclosed in slashes (e.g. \"/Value[0-9]/\"), it will be treated as a regex."
        },
        "title": {
          "type": "string",
          "description": "Title of the window to match. If enclosed in slashes (e.g. \"/Value[0-9]/\"), it will be treated as a regex."
        },
        "style": {
          "type": "string",
          "description": "Style of the window to match. If enclosed in slashes (e.g. \"/Value[0-9]/\"), it will be treated as a regex."
        }
      },
      "anyOf": [
        {
          "required": ["exename"]
        },
        {
          "required": ["classname"]
        },
        {
          "required": ["title"]
        },
        {
          "required": ["style"]
        }
      ],
      "additionalProperties": false
    },
    "windowBehavior": {
      "oneOf": [
        {
          "type": "string",
          "enum": ["float", "ignore"],
          "x-taplo": {
            "docs": {
              "enumValues": [
                "Make the window floating",
                "Don't manage the window"
              ]
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "insert": {
              "type": "object",
              "description": "Insert the window in the given monitor.",
              "properties": {
                "monitor": {
                  "type": "string",
                  "description": "Monitor to insert the window in."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "float": {
              "allOf": [
                { "$ref": "#/definitions/floatingSettings" },
                { "description": "Settings for floating windows." }
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "actionsEnum": {
      "type": "string",
      "description": "Action to be performed.",
      "anyOf": [
        {
          "enum": [
            "refresh-config",
            "open-config",
            "retile",
            "minimize",
            "close",
            "toggle-topmost",
            "focus left",
            "focus right",
            "focus up",
            "focus down",
            "switch-focus",
            "insert left",
            "insert right",
            "insert up",
            "insert down",
            "invert",
            "release",
            "focalize",
            "half-focalize",
            "cycle-focalized",
            "cycle-focalized next",
            "cycle-focalized prev",
            "amplify",
            "dumpstateinfo",
            "pause",
            "pause keybindings",
            "pause overlays",
            "quit"
          ]
        },
        {
          "pattern": "^move (left|right|up|down)( (4[0-9]|[5-9][0-9]|[1-9][0-9]{2}|1000))?$"
        },
        {
          "pattern": "^moveinsert (left|right|up|down)( (4[0-9]|[5-9][0-9]|[1-9][0-9]{2}|1000))?$"
        },
        {
          "pattern": "^resize (left|right|up|down) (4[0-9]|[5-9][0-9]|[1-4][0-9]{2}|500)( (4[0-9]|[5-9][0-9]|[1-4][0-9]{2}|500))?$"
        },
        {
          "pattern": "^peek (left|right|up|down) (1[0-9]|[2-8][0-9]|90)$"
        }
      ]
    },
    "tilingStrategyEnum": {
      "description": "Defines the tiling strategy used in the layout.",
      "type": "string",
      "enum": ["golden_ratio", "horizontal", "vertical", "twostep", "squared"],
      "x-taplo": {
        "docs": {
          "enumValues": [
            "Golden ratio",
            "Horizontal",
            "Vertical",
            "Twostep",
            "Squared"
          ]
        }
      }
    },
    "bordersPadding": {
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0,
          "maximum": 140
        },
        {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0,
            "maximum": 140
          },
          "minItems": 4,
          "maxItems": 4
        },
        {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0,
            "maximum": 140
          },
          "minItems": 2,
          "maxItems": 2
        }
      ]
    },
    "layoutPaddings": {
      "type": "object",
      "properties": {
        "tiles": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100,
          "description": "Padding between windows (in pixels)."
        },
        "borders": {
          "allOf": [
            {
              "$ref": "#/definitions/bordersPadding"
            },
            {
              "description": "Padding between monitor borders and windows (in pixels). Can be:\n\n- A number, which will be applied to all sides;\n- A 2-tuple ([vertical, horizontal]);\n- A 4-tuple ([top, right, bottom, left]).\n\nAll values must be between 0 and 140."
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "floatingSettings": {
      "type": "object",
      "description": "Settings for floating windows.",
      "properties": {
        "topmost": {
          "type": "boolean",
          "description": "If true, floating windows are always on top of other windows."
        },
        "centered": {
          "type": "boolean",
          "description": "If true, floating windows are centered on the monitor when released."
        },
        "size": {
          "type": "string",
          "description": "How floating windows are resized.",
          "enum": ["preserve", "relative", "fixed"],
          "x-taplo": {
            "docs": {
              "enumValues": [
                "Keep current size",
                "Resize based on monitor size",
                "Resize to a fixed size"
              ]
            }
          }
        },
        "size_ratio": {
          "type": "array",
          "description": "Ratio of the floating windows size relative to the monitor.",
          "items": {
            "type": "number",
            "minimum": 0.1,
            "maximum": 1.0
          },
          "minItems": 2,
          "maxItems": 2
        },
        "size_fixed": {
          "type": "array",
          "description": "Fixed size of the floating windows.",
          "items": {
            "type": "integer",
            "minimum": 100,
            "maximum": 10000
          },
          "minItems": 2,
          "maxItems": 2
        }
      },
      "additionalProperties": false
    },
    "specificOverlaySettings": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables/disables the overlay."
        },
        "color": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^#?[0-9A-Fa-f]{6}|[0-9A-Fa-f]{8}$"
            },
            {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 255
              },
              "minItems": 3,
              "maxItems": 4
            }
          ],
          "description": "Color of the overlay. Can be a HEX color string (\"#RRGGBB\"/\"#RRGGBBAA\") or an RGB/RGBA array ([R, G, B]/[R, G, B, A])."
        }
      },
      "additionalProperties": false
    }
  }
}

